//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeatSaber_FakeMultiplay.Client.ResourceFiles.Index {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class IndexResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal IndexResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BeatSaber_FakeMultiplay.Client.ResourceFiles.Index.IndexResource", typeof(IndexResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We highly recommend you install the App to prevent disconnection issues.
        ///
        ///&lt;img src=&quot;/images/tutorial/en/installing-the-app&quot; alt=&quot;Install the app&quot; /&gt;.
        /// </summary>
        public static string BeforeStartContentText {
            get {
                return ResourceManager.GetString("BeforeStartContentText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Before Start.
        /// </summary>
        public static string BeforeStartTitleText {
            get {
                return ResourceManager.GetString("BeforeStartTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using the software is pretty straight forward. No special mod needs to be installed for FakeMultiplay.
        ///
        ///1. Click on the &quot;Multiplay&quot; tab.
        ///2. Enter a room name.
        ///3. Click &quot;Create/Join&quot;
        ///
        ///&lt;img src=&quot;/images/tutorial/en/create-room.jpg&quot; alt=&quot;Create a new room&quot; /&gt;
        ///The room name is the only way to identify the connection. Please make sure it&apos;s not easily guessable.
        ///
        ///4. Type in your player name
        ///5. Click &quot;Connect&quot;. 
        ///* Make sure you start Beat Saber first.
        ///
        ///&lt;img src=&quot;/images/tutorial/en/connect-to-room.jpg [rest of string was truncated]&quot;;.
        /// </summary>
        public static string HowToContentText {
            get {
                return ResourceManager.GetString("HowToContentText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to?.
        /// </summary>
        public static string HowToTitleText {
            get {
                return ResourceManager.GetString("HowToTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string InstallationInfoText {
            get {
                return ResourceManager.GetString("InstallationInfoText", resourceCulture);
            }
        }
    }
}
